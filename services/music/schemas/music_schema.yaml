schema;master_schema:
  type: map
  func: is_node_or_instance
  nullable: false
  mapping:
    music_dir: {type: str, nullable: false, range: {min: 1}, func: file_exists}
    popup: {type: str, nullable: false, range: {min: 1}}
    chat: {type: str, nullable: false, range: {min: 1}}
    pause_without_players: {type: bool, nullable: false}
    radios:
      type: map
      nullable: false
      mapping:
        regex;(.+):
          type: map
          nullable: false
          mapping:
            type: {type: str, enum: ['SRSRadio'], required: true, nullable: false}
            mode: {type: int, enum: [1, 2], required: true, nullable: false}
            frequency: {type: text, required: true, nullable: false}
            modulation: {type: str, enum: ['AM', 'FM'], required: true, nullable: false}
            coalition: {type: int, enum: [1, 2], required: true, nullable: false}
            volume: {type: text, nullable: false}
            display_name: {type: str, nullable: false, range: {min: 1}}
            popup: {type: str, nullable: false, range: {min: 1}}
            chat: {type: str, nullable: false, range: {min: 1}}
    # Allow deep nesting for Node/Instance declaration
    regex;(.+):
      include: 'master_schema'

type: map
nullable: false
mapping:
  DEFAULT:
    include: 'master_schema'
  regex;(.+):
    include: 'master_schema'
